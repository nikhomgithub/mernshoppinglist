Actions
errorActions         authActions                               itemActions
  returnErrors          register                                  getItems
  clearErrors           loadUser                                  addItem 
                        logout                                    deleteItem
                        login                                     setItemsLoading
                        tokenConfig

errorReducer         authReducer                               itemReducer
  msg:{},               token:localStorage.getItem('token')       item:[],
  status:null,          isAuthenticated:false,                    loading:false  
  id:null               isLoading:false,
                        user:null  
                        
  GET_ERRORS            USER_LOADING                              GET_ITEMS
  CLEAR_ERRORS          USER_LOADED                               DELETE_ITEM
                        LOGIN_SUCCESS                             ADD_ITEM  
                          REGISTER_SUCCESS                        ITEMS_LOADING
                        LOGIN_FAIL,LOGOUT_SUCCESS,
                          AUTH_ERROR,REGISTER_FAIL

How to access store/state from component     
  this.props.item
  this.props.error
  this.props.auth
  
How to access action from another action
  dispatch(action_name(arg1,arg2))

How to access reducer from action
  dispatch({
    type:SOME_THING
    payload:some_thing
  })
  
How to access action from component
  outside <Provider store={store}/>
        store.dispatch(loadUser())
  inside <Provider store={store}/>
        this.props.action_name()
 
loadUser()
     dispatch(USER_LOADING)          =>  isLoading:true
     axios.get('/api/auth/user)
         .then (dispatch(USER_LOADED,payload) 
                                     =>  isAuthenticated:true,
                                         isLoading:false,
                                         user:action.payload                                         
         .catch (returnErrror(err,stutus,null)
                dispatch(GET_ERROR)  =>  msg:err
                                         status:status
                                         id:null
                dispatch(AUTH_ERROR) =>  token:null, (localStorage.removeItem('token'))
                                         isAuthenticated:false,
                                         isLoading:false,
                                         user:null
                                         
login(email,password)                                         
     axios.post('/api/auth')
         .then (dispatch(LOGIN_SUCCESS,payload)
                                         token:action.payload.token (localStorage.setItem('token',action.payload.token))
                                         user:action.payload.user
                                         isAuthenticated:true,
                                         isLoading:false,
         .catch (returnErrror(err,stutus,LOGIN_FAIL)
                dispatch(GET_ERROR)  =>  msg:err
                                         status:status
                                         id:LOGIN_FAIL
                dispatch(LOGIN_FAIL) =>  token:null (localStorage.removeItem('token'))
                                         isAuthenticated:false,
                                         isLoading:false,
                                         user:null

logout()
   dispatch(LOGOUT_SUCCESS)          =>  token:null,  (localStorage.removeItem('token'))
                                         isAuthenticated:false,
                                         isLoading:false,
                                         user:null
                                         
register(newUser)
   axios.post('/api/users/')
       .then(dispatch(REGISTER_SUCCESS,payload)
                                         token:action.payload.token (localStorage.setItem('token',action.payload.token))
                                         user:action.payload.user
                                         isAuthenticated:true,
                                         isLoading:false,
       .catch (returnErrror(err,stutus,REGISTER_FAIL)
                dispatch(GET_ERROR)  =>  msg:err
                                         status:status
                                         id:REGISTER_FAIL
                dispatch(REGISTER_FAIL)
                                     =>  token:null (localStorage.removeItem('token'))
                                         isAuthenticated:false,
                                         isLoading:false,
                                         user:null
                                         
addItem(newItem)       
   axios.post('/api/items/')
       .then (dispatch(ADD_ITEM,payload)
                                     =>  items:[action.payload,...state.items]    
       .catch (returnErrror(err,stutus,null)
                dispatch(GET_ERROR)  =>  msg:err
                                         status:status
                                         id:null
                                         
deleteItem(id)
   axios.delete('/api/tems/${id}')
       .then(dispatch(DELETE_ITEM,payload)
                                     => items : state.items.filter(item=>item._id!==action.payload)
       
       .catch(returnErrror(err,stutus,null)
                dispatch(GET_ERROR)  =>  msg:err
                                         status:status
                                         id:null 
                                         
getItem()
   dispatch(setItemsLoading())
       dispatch(ITEMS_LOADING)       =>  loading:true
   axios.get('/api/items')                                 
       .then( dispatch(GET_ITEMS,payload)
                                     =>  items:action.payload,
                                         loading:false
       .catch(returnErrror(err,stutus,null)
                dispatch(GET_ERROR)  =>  msg:err
                                         status:status
                                         id:null                          
                                         
                                         
                                         
                                         
                                         
                                         
                                         
                                         
                                         
                                         
                                         
                                   
                                         
                                         
